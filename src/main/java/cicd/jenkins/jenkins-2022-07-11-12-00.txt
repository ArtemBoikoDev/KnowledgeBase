+03 - CI & CD testing 
{t 13-01} [in-KB jenkins-2022-07-11-12-00]





00-00...05-42

CI - continious integration - непрерывная интеграция

интеграцию моделей системы мы делаем постоянно после пуша,
вся система пересобирается

зачем так часто - на всякий случай

VCS - version control server - git репозиторий

делаем пуш, запускаются юнит-тесты, и получаем падение билда,
если тесты упали (раньше билд собирался, сейчас нет)

дефект идентифицируется в течении 7 минут, он дешёвый

итого: как только я сделал коммит в гит,
сразу пошла интеграция в системе, пересборка

цель CI - узнать, что появились ошибки КАК МОЖНО РАНЬШЕ





05-42...07-47

требования к CI:
-наличие системы версионного контроля, в котором хранится код
-сборка должна быть автоматизирована (скрипт, машина)
-автоматизированные тесты
-частые мелкие коммиты (чтобы понять где ошибка)
-сборка при любом изменении (при коммите)





07-48...11-19

CD - continious delivery - это продолжение CI

основная задача CI - иметь в конце собранную,
протестированную систему с новым изменением

CD - автоматический деплой собранного приложения
(готовый рабочий продукт у пользователя)

обязательность/необязательность CD решает бизнес,
нужно или пока не нужно деплоить

пример: AWS деплоит изменения на продакшн каждые 11 секунд





11-19...до конца

выгоды использования CI/CD

рано обнаруживаем дефекты, их дешевле исправить

автоматическая установка приложения

прозрачный монитор здоровья проекта

можем визуализировать pipeleine (цепочку сборок)

можем распараллеливать задачи








всё
----------







